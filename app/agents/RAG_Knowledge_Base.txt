#Document Information
type: table
description: Summary table of title, project, version, author.
fields: [Document Title, Project Name, Client Name, Prepared By (Author, Department), Document Version & Date]
prompt: List all title, project, client, version, and author (Keep its Value "PWC AI Asset" always) in a table.

#Introduction
type: text
description: Brief statement of document purpose, scope, and intended audience.
prompt: Carefully analyze the payload(business_process, requirement_summary) and state the purpose, scope, and audience for this document.

#Business Requirement Overview
type: text
description: Concise statement of business requirements, business process pain points, and objectives of the proposed solution.
prompt: Summarize the business requirements and objectives as provided in the payload(requirement_summary).

#Business Process Flow
type: diagram
description: High-level functional process flow of business requirement before and after solution, represented as sequential steps or branching decisions.
prompt: Carefully analyze the payload(business_process) and present the process as an arrow-connected flow (Start -> Step1 -> Step2 -> … -> End). Show Yes/No branches if applicable. Only use actual provided details.

#Functional Scope
type: text
description: Definition of what is included and excluded in the functional scope of the solution.
prompt: From the payload, list: 1. In-Scope items 2. Out-of-Scope items. Present in numbered format. This should be in detail and should contain all the logic.

#Functional Solution Approach
type: text
description: High-level description of how the business requirement will be addressed functionally.
prompt: Carefully analyze the payload and and for every functional scope provide the functional solution approach in detail as: 1. … 2. … 3. …

#Functional Requirements & Business Rules
type: table
description: Table capturing all detailed functional requirements and associated business rules.
fields: [Requirement ID, Requirement Description, Business Rule, Priority, Comments]
prompt: Present all functional requirements and business rules in a table with the provided fields. Use values from payload(requirements, business_rules) or [To Be Filled] if missing.

#Interfaces & Integration
type: table
description: List of all functional interfaces (inbound, outbound, real-time, batch) and their purpose.
fields: [Interface ID, Source System, Target System, Data/Message Type, Frequency/Mode, Description]
prompt: Present the interface details strictly in table format based on payload(interface_details). Do not assume or invent.

#Reports & Outputs
type: table
description: List of reports, extracts, and outputs required functionally.
fields: [Report/Output Name, Format/Layout, Destination, Purpose/Description]
prompt: Carefully analyze the payload and list all reports/outputs required in the table.

#User Interface Requirements
type: table
description: List of functional screen fields, user interactions, and validations, selection-screen, parameters.
fields: [Screen/Field Name, Field Type, Default Value, Mandatory (Y/N), Business Purpose/Validation]
prompt: Check for all the selection screen parameters and screen fields and present the results strictly as a table based on payload.

#Authorization & Security
type: table
description: Functional authorization requirements, roles, and access restrictions.
fields: [Role/Profile, Authorization Object, Access Level, Description]
prompt: Present the functional authorization requirements in table format using payload(security). If missing, mark as [To Be Filled].

#Error Handling & Notifications
type: text
description: Explanation of error handling, messages, and user notifications required in functional solution.
prompt: From the payload(requirements, business_rules), list all error handling and notification requirements in numbered format.

#Assumptions & Dependencies
type: text
description: List of assumptions and dependencies impacting functional design.
prompt: Extract assumptions and dependencies from payload(assumptions, dependencies) and present in numbered format.

#Test Scenarios
type: table
description: Functional test plan coverage/scenarios, input data, expected outputs, status.
fields: [Test Case ID, Objective, Input Data, Expected Output, Actual Result/Status, Sign-off/Comments]
prompt: Analyze the payload(requirements, ui_details, reports) and generate functional test cases in table format.

#Sign-Off
type: table
description: Table of prepared by, approved by, and client sign-off (with signature and date).
fields: [Role, Name, Signature, Date]
prompt: Provide a sign-off table for Prepared By, Approved By, and Client Sign-Off.
